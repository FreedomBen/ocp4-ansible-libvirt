- name: create install dir
  file:
    path: "{{ workdir.install }}"
    state: directory

- name: create vm data dir
  file:
    path: "{{ workdir.vm_data }}"
    state: directory    

- name: check if rhcos image exists
  stat:
    path: "{{ workdir.vm_data }}/{{ base_image_name }}"
  register: result

# - name: download rhcos image
#   get_url:
#     url: https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/4.2/latest/rhcos-4.2.0-x86_64-metal-bios.raw.gz
#     dest: "{{ workdir.vm_data }}"
#   when: result.stat.exists == false

- name: download rhcos image
  command: curl --compressed -J -L -o {{ workdir.vm_data }}/{{ base_image_name}} {{ base_image_url }}
  when: result.stat.exists == false     

- name: download installer exec
  meta: noop

- name: prepare image for bootstrap
  include: prepare-image.yaml 
  with_items:
  - '{{ cluster.compute.bootstrap }}'

- name: prepare image for masters
  include: prepare-image.yaml   
  with_items: '{{ cluster.compute.masters }}'
  
- name: prepare image for workers
  include: prepare-image.yaml   
  with_items: '{{ cluster.compute.masters }}'      

- name: prepare install-config
  template:
    src: install-config.yaml.j2
    dest: "{{ workdir.install }}/install-config.yaml"

- name: add pull secret
  lineinfile:
    path: "{{ workdir.install }}/install-config.yaml"
    regexp: '^pullSecret:'
    line: 'pullSecret: ''{{ lookup("file", lookup("env", "PULL_SECRET_FILE")) }}'''
    state: present  
    
- name: add ssh key
  lineinfile:
    path: "{{ workdir.install }}/install-config.yaml"
    regexp: '^sshKey:'
    line: 'sshKey: ''{{ lookup("file", lookup("env","PUBLIC_SSH_KEY_FILE")) }}'''
    state: present     

- name: create ignition
  command: openshift-install create ignition-configs --dir {{ workdir.install }}
  