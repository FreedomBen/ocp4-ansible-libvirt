#variant: fcos
#version: 1.0.0
# ignition:
#   security:
#     tls:
#       certificate_authorities:
#       - source: "data:,{{ lookup('file',workdir.registry_mirror~'/'~cluster.compute.registry_mirror.name~'.'~install_config.baseDomain~'.crt') | urlencode() }}"
passwd:
  users:
  - name: core
    ssh_authorized_keys: 
    - |
      {{ lookup("file", lookup("env","PUBLIC_SSH_KEY_FILE")) | indent(6) }}
storage:
  files:
{{ lookup('file','../../create-ignition/files/podman-policy.ign') | indent(4) }}  
#   - path: /etc/containers/policy.json
#     mode: 0644
#     filesystem: root
#     contents:
#       inline: |
#         {
#           "default": [
#             {
#               "type": "insecureAcceptAnything"
#             }
#           ],
#           "transports": {
#             "docker": {
#               "registry.access.redhat.com": [
#                 {
#                   "type": "signedBy",
#                   "keyType": "GPGKeys",
#                   "keyPath": "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
#                 }
#               ],
#               "registry.redhat.io": [
#                 {
#                   "type": "signedBy",
#                   "keyType": "GPGKeys",
#                   "keyPath": "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
#                 }
#               ],
#               "quay.io/openshift-release-dev": [
#                 {
#                   "type": "signedBy",
#                   "keyType": "GPGKeys",
#                   "keyPath": "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
#                 }
#               ]                            
#             },
#             "docker-daemon": {
#               "": [
#                 {
#                   "type": "insecureAcceptAnything"
#                 }
#               ]
#             }
#           }
#         }
#   - path: /etc/containers/registries.d/quay.io-openshift-release-dev.yaml
#     mode: 0644
#     filesystem: root
#     contents:
#       inline: |
#         docker:
#           quay.io/openshift-release-dev:
#             sigstore: https://storage.googleapis.com/openshift-release/official/signatures/openshift/release
# # optionally one can also use: https://mirror.openshift.com/pub/openshift-v4/signatures/openshift/release            
                    
#   - path: /etc/containers/registries.d/registry.access.redhat.com.yaml
#     mode: 0644
#     filesystem: root
#     contents:
#       inline: |
#         docker:
#           registry.access.redhat.com:
#             sigstore: https://access.redhat.com/webassets/docker/content/sigstore
#   - path: /etc/containers/registries.d/registry.redhat.io.yaml
#     mode: 0644
#     filesystem: root
#     contents:
#       inline: |
#         docker:
#           registry.redhat.io:
#             sigstore: https://registry.redhat.io/webassets/docker/content/sigstore                         
  - path: /opt/registry/auth/pull_secret.json
    mode: 0644
    filesystem: root
    contents:
      inline: |
        {{ lookup('file',workdir.registry_mirror~'/'~mirror.pull_secret_file) | indent(8) }}  
  - path: /opt/registry/auth/htpasswd
    mode: 0644
    filesystem: root
    contents:
      inline: |
        {{ lookup('file',workdir.registry_mirror~'/htpasswd') | indent(8) }}
  - path: /opt/registry/certs/domain.crt
    mode: 0644
    filesystem: root
    contents:
      inline: |
        {{ lookup('file',workdir.registry_mirror~'/'~cluster.compute.registry_mirror.name~'.'~install_config.baseDomain~'.crt') | indent(8) }} 
  - path: /opt/registry/certs/domain.key
    mode: 0644
    filesystem: root
    contents:
      inline: |
        {{ lookup('file',workdir.registry_mirror~'/'~cluster.compute.registry_mirror.name~'.'~install_config.baseDomain~'.key') | indent(8) }} 
#   - path: /etc/pki/ca-trust/source/anchors/domain.crt
#     mode: 0644
# #    filesystem: root
#     contents:
#       inline: |
{#         {{ lookup('file',workdir.registry_mirror~'/'~cluster.compute.registry_mirror.name~'.'~install_config.baseDomain~'.crt') | indent(8) }} #}
systemd:
  units:
    - name: registry-mirror.service
      enabled: true
      contents: |
        [Unit]
        Description=registry-mirror
        After=network-online.target
        Wants=crio.service

        [Service]
        TimeoutStartSec=0
        ExecStartPre=-/bin/podman kill mirror-registry
        ExecStartPre=-/bin/podman rm mirror-registry
        ExecStartPre=/bin/podman pull docker.io/library/registry:2
        #ExecStartPre=mkdir -p /opt/registry/certs
        #ExecStartPre=/bin/bash -c 'test -s /opt/registry/certs/domain.key && test -s /opt/registry/certs/domain.key || /bin/openssl req -newkey rsa:4096 -nodes -sha256 -keyout /opt/registry/certs/domain.key -x509 -days 365 -out /opt/registry/certs/domain.crt -subj "/C=SE/ST=Stockholm/L=Stockholm/O=Red Hat/OU=Consulting/CN={{ cluster.compute.registry_mirror.name~'.'~install_config.baseDomain }}/emailAddress=admin@ocp.example.com.com"'
        ExecStartPre=mkdir -p /opt/registry/data
        #ExecStart=/bin/podman run --name mirror-registry -p 5000:5000 -v /opt/registry/data:/var/lib/registry:z -v /opt/registry/auth:/auth:z -e "REGISTRY_AUTH=htpasswd" -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd -v /opt/registry/certs:/certs:z -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key -d docker.io/library/registry:2        
        ExecStart=/bin/podman run --name mirror-registry -p 5000:5000 -v /opt/registry/data:/var/lib/registry:z -v /opt/registry/certs:/certs:z -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key -d docker.io/library/registry:2        

        [Install]
        WantedBy=multi-user.target
    - name: mirror-job.service
      enabled: true
      contents: |
        [Unit]
        Description=mirror-job
        After=network-online.target
        Wants=crio.service

        [Service]
        RemainAfterExit=true
        TimeoutStartSec=0
        Restart=on-failure
        Environment=LOCAL_SECRET_JSON=/opt/registry/auth/pull_secret.json
        Environment=PRODUCT_REPO=openshift-release-dev
        Environment=RELEASE_NAME=ocp-release
        Environment=LOCAL_REGISTRY={{ cluster.compute.registry_mirror.name~'.'~install_config.baseDomain }}:5000
        Environment=LOCAL_REPOSITORY=ocp4/openshift4
        Environment=OCP_RELEASE={{ cluster.version }}-x86_64
        ExecStartPre=-/bin/podman kill mirror-job
        ExecStartPre=-/bin/podman rm mirror-job
        ExecStartPre=/bin/podman pull --authfile ${LOCAL_SECRET_JSON} quay.io/openshift/origin-cli
        ExecStartPre=/bin/bash -c '/bin/cp /opt/registry/certs/domain.crt /etc/pki/ca-trust/source/anchors/ && /bin/update-ca-trust'
        ExecStartPre=/bin/curl -v -s -u {{ mirror.username }}:{{ mirror.password }} https://{{ cluster.compute.registry_mirror.name~'.'~install_config.baseDomain }}:5000/v2/_catalog
        #ExecStartPre=/bin/bash -c "/bin/jq '.auths += {\"utility.ocp.example.com:5000\":{\"auth\":\"b2NwOm9jcA==\",\"email\":\"admin@ocp.example.com\"}}' /opt/services/registry/auth/pullsecret_rh.json | /bin/tee /opt/services/registry/auth/pullsecret.json"        
        #ExecStart=/bin/podman run --name mirror-job -v /opt/registry/auth:/opt/registry/auth:z quay.io/openshift/origin-cli /bin/oc adm -a ${LOCAL_SECRET_JSON} release mirror --from=quay.io/${PRODUCT_REPO}/${RELEASE_NAME}:${OCP_RELEASE} --to=${LOCAL_REGISTRY}/${LOCAL_REPOSITORY} --to-release-image=${LOCAL_REGISTRY}/${LOCAL_REPOSITORY}:${OCP_RELEASE}
        ExecStart=/bin/oc adm -a ${LOCAL_SECRET_JSON} release mirror --from=quay.io/${PRODUCT_REPO}/${RELEASE_NAME}:${OCP_RELEASE} --to=${LOCAL_REGISTRY}/${LOCAL_REPOSITORY} --to-release-image=${LOCAL_REGISTRY}/${LOCAL_REPOSITORY}:${OCP_RELEASE}       
        
        [Install]
        WantedBy=multi-user.target        